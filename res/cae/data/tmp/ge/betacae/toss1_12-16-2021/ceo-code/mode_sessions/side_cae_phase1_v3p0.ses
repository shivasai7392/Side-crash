$------------------------------------------------------------------------------------------------------------------------------------------------------
$
$          >> SESSION FOR COMPILING SIDE CRASH DATA <<
$        >> ASSUMES USER INPUT DATA HAS BEEN COMPILED <<
$
$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- LOAD GEOMETRY

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---PHASE 1 2D METADB GENERATION---")
	print("")
	print("---GEOMETRY IMPORT")
	geo_source = utils.MetaGetVariable('pG')
	print("SOURCE GEOMETRY FILE : "+geo_source)
	print("")
if __name__ == '__main__':
	main()
//#!EOF

window active  "${d3plot_data}"
read geom Dyna3d "${pG}"
opt var add model ${CUR_MODEL}
opt var add target_model ${CUR_MODEL}
opt var add target_sort null

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- GLOBAL DATA
$ 

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---GLOBAL DATA---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${global_accel}"
window active "${global_accel}"
xyplot rlayout "${global_accel}" 4
xyplot plotdeactive "${global_accel}" all
window active none

$ -- CAE DATA PROCESSING
opt var add attack_window "${global_accel}"
opt var add window "${attack_window}"
opt var add window_id 0
opt var add target_variable unit_floor_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

opt var add window_id 1
opt var add target_variable sis_row_r_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

opt var add window_id "2"
opt var add target_variable bplr_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

opt var add window_id 3
opt var add target_variable MDB_node

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$ -- FORMATTING
$-- GENERAL
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}
opt var add font_info "Arial,16,-1,5,75,0,0,0,0,0"
opt var add formatting_window_name "${attack_window}"
$-- Y0
opt var add y2_step 50
opt var add y2_multiplier 0
opt var add y2_label "Displacement / Intrusion [mm]"
$-- Y1
opt var add y1_step 1000
opt var add y1_multiplier 3
opt var add y1_label "Velocity [m/s]"
$-- Y2
opt var add y0_step 50
opt var add y0_multiplier 0
opt var add y0_label "Acceleration [G]"

opt var add window_number 0
opt var add title_label "UNIT/FLOOR"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 1
opt var add title_label "SIS ROW R"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 3
opt var add title_label "MDB"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 2
opt var add title_label "B-PLR Stroke"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- SUSPENSION DATA
$ 

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---SUSPENSION DATA---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${suspension_accel}"
window active "${suspension_accel}"
xyplot rlayout "${suspension_accel}" 18
xyplot plotdeactive "${suspension_accel}" all
window active none

$ -- CAE DATA PROCESSING
opt var add attack_window "${suspension_accel}"
opt var add window "${attack_window}"
opt var add window_id 0
opt var add target_variable struck_subframe_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

opt var add window_id 1
opt var add target_variable unstruck_subframe_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

opt var add window_id 2
opt var add target_variable struck_chassis_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

opt var add window_id 3
opt var add target_variable unstruck_chassis_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

xyplot plotactive "${suspension_accel}" 4
opt var add normal_start 1
xyplot read lsdyna "${suspension_accel}" "${pA}" deforc-SpringDamper ${struck_damper_elements} Relative_displacement/rotation_(dis)
opt var add normal_end ${LAST_CURVE_ID}
xyplot curve set linewidth "${suspension_accel}" visible 0
xyplot curve visible not "${suspension_accel}" all
xyplot plotdeactive "${suspension_accel}" 4

xyplot plotactive "${suspension_accel}" 5
opt var add normal_start 1
xyplot read lsdyna "${suspension_accel}" "${pA}" deforc-SpringDamper ${unstruck_damper_elements} Relative_displacement/rotation_(dis)
opt var add normal_end ${LAST_CURVE_ID}
xyplot curve set linewidth "${suspension_accel}" visible 0
xyplot curve visible not "${suspension_accel}" all
xyplot plotdeactive "${suspension_accel}" 5

$ -- FORMATTING
$-- GENERAL
opt var add x_max 0.08
opt var add x_min 0.0
opt var add x_space 0.01
opt var string x_multiplier -3
opt var add formatting_window_name "${attack_window}"

opt var add window_number 0
opt var add title_label "Struck subframe"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 1
opt var add title_label "Unstruck subframe"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 2
opt var add title_label "Struck chassis"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 3
opt var add title_label "Unstruck chassis"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add formatting_window_name "${attack_window}"
opt var add window_number 4
opt var add title_label "Struck damper"
opt var add y_label "Stroke [mm]"
opt var add y_multiplier 0
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 5
opt var add title_label "Unstruck damper"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- GLOBAL SECTIONS
$ 

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---GLOBAL SECTIONS---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${global_sections}"
window active "${global_sections}"
xyplot rlayout "${global_sections}" 4
xyplot plotdeactive "${global_sections}" all
window active none

opt var add target_section_variable bplr_sections
read session ${code_source_path}/src/section_string_generator.ses

xyplot plotactive "${global_sections}" 0
xyplot read lsdyna "${global_sections}" "${pA}"  secforc-Section ${section_string} X_force_(xf),Y_force_(yf),Z_force_(zf),Magnitude_of_force_(mf),X_moment_(xm),Y_moment_(ym),Z_moment_(zm),Magnitude_of_moment_(mm)
xyplot curve set linewidth "${global_sections}" visible 0
xyplot curve visible not "${global_sections}" all
xyplot plotdeactive "${global_sections}" 0

opt var add target_section_variable sill_sections
read session ${code_source_path}/src/section_string_generator.ses

xyplot plotactive "${global_sections}" 1
xyplot read lsdyna "${global_sections}" "${pA}"  secforc-Section ${section_string} X_force_(xf),Y_force_(yf),Z_force_(zf),Magnitude_of_force_(mf),X_moment_(xm),Y_moment_(ym),Z_moment_(zm),Magnitude_of_moment_(mm)
xyplot curve set linewidth "${global_sections}" visible 0
xyplot curve visible not "${global_sections}" all
xyplot plotdeactive "${global_sections}" 1

opt var add target_section_variable wheelhouse_sections
read session ${code_source_path}/src/section_string_generator.ses

xyplot plotactive "${global_sections}" 2
xyplot read lsdyna "${global_sections}" "${pA}"  secforc-Section ${section_string} X_force_(xf),Y_force_(yf),Z_force_(zf),Magnitude_of_force_(mf),X_moment_(xm),Y_moment_(ym),Z_moment_(zm),Magnitude_of_moment_(mm)
xyplot curve set linewidth "${global_sections}" visible 0
xyplot curve visible not "${global_sections}" all
xyplot plotdeactive "${global_sections}" 2

$ -- FORMATTING

opt var add formatting_window_name "${global_sections}"
opt var add window_number 0
opt var add title_label "B-PLR SECTIONS"
opt var add y_label "Force [kN] / Moment [N-m]"
opt var add y_multiplier 3
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 1
opt var add title_label "SILL SECTIONS"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 2
opt var add title_label "WHEELHOUSE SECTIONS"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- SEAT MOUNTS
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---SEAT SECTIONS---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${seat_mount}"
window active "${seat_mount}"
xyplot rlayout "${seat_mount}" 17

opt var add target_window "${seat_mount}"
opt var add start_id 0

opt var add target_section_variable fr_seat_sections
read session ${code_source_path}/src/section_string_generator.ses
opt var add sections ${section_string}

read session ${code_source_path}/src/bolt_section_output.ses

opt var add start_id 3

opt var add target_section_variable rr_seat_sections
read session ${code_source_path}/src/section_string_generator.ses
opt var add sections ${section_string}

read session ${code_source_path}/src/bolt_section_output.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}
opt var add formatting_window_name "${seat_mount}"
opt var add y_multiplier 3
opt var add y_step 10000
opt var add y_label "Force [kN]"

opt var add window_number 0
opt var add title_label "Front seat bolts normal force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 1
opt var add title_label "Front seat bolts resultant shear force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var string x_multiplier 3
opt var add x_space 10000
opt var add x_label "Force [kN]"

opt var add window_number 2
opt var add title_label "Front seat bolts normal vs resultant shear"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

opt var add window_number 3
opt var add title_label "Rear seat bolts normal force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 4
opt var add title_label "Rear seat bolts resultant shear force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var string x_multiplier 3
opt var add x_space 10000
opt var add x_label "Force [kN]"

opt var add window_number 5
opt var add title_label "Rear seat bolts normal vs resultant shear"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- REAR DOOR PANEL DATA
$ 

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---REAR DOOR PANEL---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

window active  "$(d3plot_data)"
read dis Dyna3d "${pD}" all Displacements

xyplot create "${rrdoor_accel}"
window active "${rrdoor_accel}"
xyplot rlayout "${rrdoor_accel}" 4

opt var add attack_window "${rrdoor_accel}"
opt var add window "${attack_window}"

$ -- CAE DATA PROCESSING
window active "${rrdoor_accel}"
xyplot plotdeactive "${rrdoor_accel}" all

$-- ROW2 ABDOMEN SENSOR DATA
opt var add window_id 1
opt var add target_variable row2_abdomen_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW2 ABDOMEN SPHERE ANALYSIS
opt var add window_id 1
opt var string center ${row2_abdomen_center}
opt var string radius ${row2_abdomen_radius}
opt var string panel ${row2_panel}
opt var string prefix ROW2_ABDOMEN_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

$-- ROW2 SHOULDER SENSOR DATA
opt var add window_id 0
opt var add target_variable row2_shoulder_node

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW2 SHOULDER SPHERE ANALYSIS
opt var add window_id 0
opt var string center ${row2_shoulder_center}
opt var string radius ${row2_shoulder_radius}
opt var string panel ${row2_panel}
opt var string prefix ROW2_SHOULDER_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

$-- ROW2 PELVIS SENSOR DATA
opt var add window_id 2
opt var add target_variable row2_pelvis_node

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW2 PELVIS SPHERE ANALYSIS
opt var string center ${row2_pelvis_center}
opt var string radius ${row2_pelvis_radius}
opt var string panel ${row2_panel}
opt var string prefix ROW2_PELVIS_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

$-- ROW2 FEMUR SENSOR DATA
opt var add window_id 3
opt var add target_variable row2_femur_node

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW2 FEMUR SPHERE ANALYSIS
opt var add window_id 3
opt var string center ${row2_femur_center}
opt var string radius ${row2_femur_radius}
opt var string panel ${row2_panel}
opt var string prefix ROW2_FEMUR_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

$ -- FORMATTING
$-- GENERAL
opt var add formatting_window_name "${attack_window}"
$-- Y0
opt var add y2_step 20
opt var add y2_multiplier 0
opt var add y2_label "Displacement / Intrusion [mm]"
$-- Y1
opt var add y1_step 1000
opt var add y1_multiplier 3
opt var add y1_label "Velocity [m/s]"
$-- Y2
opt var add y0_step 200
opt var add y0_multiplier 0
opt var add y0_label "Acceleration [G]"

opt var add window_number 0
opt var add title_label "Rear Door Shoulder"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 1
opt var add title_label "Rear Door Abdomen"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 2
opt var add title_label "Rear Door Pelvis"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 3
opt var add title_label "Rear door Femur"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- REAR DOOR LATCH METRICS
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---REAR DOOR LATCH---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create ${rrdr_latch}

opt var string attack_window ${rrdr_latch}
opt var string SASH_PARTS ${row2_SASH_PARTS}
opt var string OUTER-HANDLE_PARTS ${row2_OUTER-HANDLE}
opt var string LATCH-PATCH_PARTS ${row2_LATCH-PATCH_PARTS}
opt var string COUNTERWEIGHT_PART ${row2_COUNTERWEIGHT_PART}
opt var string LOCK-ROD_PART ${row2_LOCK-ROD_PART}
opt var string DOOR-SKIN_PART ${row2_DOOR-SKIN_PART}
opt var string latch-body_nodes ${row2_latch-body_nodes}
opt var string latch-angle_nodes ${row2_latch-angle_nodes}
opt var string lever_nodes ${row2_lever_nodes}

read session ${code_source_path}/src/door_latch_metrics.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}
opt var add formatting_window_name "${attack_window}"

opt var add window_number 0
opt var add title_label "Rear door Counterweight to Sash"
opt var add y_label "Distance [mm]"
opt var add y_multiplier 0
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 1
opt var add title_label "Rear door Counterweight to Door skin"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 2
opt var add title_label "Rear door Lock rod to Door skin"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 3
opt var add title_label "Rear door lever stroke"
opt var add y_label "Stroke [mm]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 4
opt var add title_label "Rear door Lock rod to Outer handle"
opt var add y_label "Distance [mm]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 5
opt var add title_label "Rear door Latch opening angle"
opt var add y_label "Relative Angle [degrees]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 6
opt var add title_label "Rear door Lock rod to Latch patch"
opt var add y_label "Distance [mm]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- REAR DOOR MOUNTS
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---REAR DOOR SECTIONS---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${rrdr_mount}"
window active "${rrdr_mount}"
xyplot rlayout "${rrdr_mount}" 17

opt var add target_window "${rrdr_mount}"
opt var add start_id 0

opt var add target_section_variable rrdr_hinges
read session ${code_source_path}/src/section_string_generator.ses
opt var add sections ${section_string}

read session ${code_source_path}/src/bolt_section_output.ses

opt var add sections ${rrdr_striker}

$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

opt var add start_id 3

opt var add target_section_variable rrdr_striker
read session ${code_source_path}/src/section_string_generator.ses
opt var add sections ${section_string}


read session ${code_source_path}/src/striker_section_output.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

opt var add formatting_window_name "${rrdr_mount}"

opt var add y_multiplier 3
opt var add y_step 10000
opt var add y_label "Force [kN]"

opt var add window_number 0
opt var add title_label "Rear door bolts normal force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 1
opt var add title_label "Rear door bolts resultant shear force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var string x_multiplier 3
opt var add x_space 10000
opt var add x_label "Force [kN]"

opt var add window_number 2
opt var add title_label "Rear door bolts normal vs resultant shear"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}


opt var add window_number 3
opt var add title_label "Rear door striker normal force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 4
opt var add title_label "Rear door striker resultant shear force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- FRONT DOOR PANEL DATA
$ 

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---FRONT PANEL DATA---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${frdoor_accel}"
window active "${frdoor_accel}"
xyplot rlayout "${frdoor_accel}" 4

opt var add attack_window "${frdoor_accel}"
opt var add window "${attack_window}"

$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}
opt var add font_info "Arial,16,-1,5,75,0,0,0,0,0"
opt var add picture_size 488x488

$ -- CAE DATA PROCESSING
window active "${frdoor_accel}"
xyplot plotdeactive "${frdoor_accel}" all

$-- ROW1 ABDOMEN SENSOR DATA
opt var add window "${attack_window}"
opt var add window_id 1
opt var add target_variable row1_abdomen_nodes

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW1 ABDOMEN SPHERE ANALYSIS
opt var add window "${attack_window}"
opt var add window_id 1
opt var add center ${row1_abdomen_center}
opt var add radius ${row1_abdomen_radius}
opt var add panel ${row1_panel}
opt var string prefix ROW1_ABDOMEN_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

$-- ROW1 SHOULDER SENSOR DATA
opt var add window "${attack_window}"
opt var add window_id 0
opt var add target_variable row1_shoulder_node

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW1 SHOULDER SPHERE ANALYSIS
opt var add window_id 0
opt var add center ${row1_shoulder_center}
opt var add radius ${row1_shoulder_radius}
opt var add panel ${row1_panel}
opt var string prefix ROW1_SHOULDER_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

opt var add model 0

//#!python
# PYTHON script
import os
import meta
from meta import *

def main():
	test_mode = utils.MetaGetVariable('verification_mode')
	if test_mode == '32kmh_214_pole_am50':
		box = utils.MetaGetVariable('row1_panel_box')
		utils.MetaSetVariable('box', box)
		command = "read session ${code_source_path}/src/point_cloud_box_pole.ses"
		utils.MetaCommand(command)
	if test_mode == '32kmh_214_pole_af5':
		box = "-10000,-50000,-10000,50000,0,10000"
		utils.MetaSetVariable('box', box)
		command = "read session ${code_source_path}/src/point_cloud_box_pole.ses"
		utils.MetaCommand(command)

if __name__ == '__main__':
	main()

//#!EOF

$-- ROW1 PELVIS SENSOR DATA
opt var add window "${attack_window}"
opt var add window_id 2
opt var add target_variable row1_pelvis_node

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW1 PELVIS SPHERE ANALYSIS
opt var add window_id 2
opt var add center ${row1_pelvis_center}
opt var add radius ${row1_pelvis_radius}
opt var string panel ${row1_panel}
opt var string prefix ROW1_PELVIS_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

$-- ROW1 FEMUR SENSOR DATA
opt var add window "${attack_window}"
opt var add window_id 3
opt var add target_variable row1_femur_node

read session ${code_source_path}/src/node_string_generator.ses
read session ${code_source_path}/src/crash_nodout.ses

$-- ROW1 FEMUR SPHERE ANALYSIS
opt var add window_id 3
opt var string center ${row1_femur_center}
opt var string radius ${row1_femur_radius}
opt var string panel ${row1_panel}
opt var string prefix ROW1_FEMUR_SPHERE_

read session ${code_source_path}/src/point_cloud_sphere_axis2.ses

$ -- FORMATTING
$-- GENERAL
opt var add formatting_window_name "${attack_window}"
$-- Y0
opt var add y2_max 340
opt var add y2_min 0
opt var add y2_step 20
opt var add y2_multiplier 0
opt var add y2_label "Displacement / Intrusion [mm]"
$-- Y1
opt var add y1_max 18000
opt var add y1_min 0
opt var add y1_step 1000
opt var add y1_multiplier 3
opt var add y1_label "Velocity [m/s]"
$-- Y2
opt var add y0_max 1000
opt var add y0_min -600
opt var add y0_step 200
opt var add y0_multiplier 0
opt var add y0_label "Acceleration [G]"

opt var add window_number 0
opt var add title_label "Front Door Shoulder"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 1
opt var add title_label "Front Door Abdomen"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 2
opt var add title_label "Front Door Pelvis"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

opt var add window_number 3
opt var add title_label "Front door Femur"
read session ${code_source_path}/src/2d_plot_formatting_multi_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- FRONT DOOR LATCH METRICS
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---FRONT DOOR LATCH---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create ${frdr_latch}

opt var string attack_window ${frdr_latch}
opt var string SASH_PARTS ${row1_SASH_PARTS}
opt var string OUTER-HANDLE_PARTS ${row1_OUTER-HANDLE}
opt var string LATCH-PATCH_PARTS ${row1_LATCH-PATCH_PARTS}
opt var string COUNTERWEIGHT_PART ${row1_COUNTERWEIGHT_PARTS}
opt var string LOCK-ROD_PART ${row1_LOCK-ROD_PART}
opt var string DOOR-SKIN_PART ${row1_DOOR-SKIN_PART}
opt var string latch-body_nodes ${row1_latch-body_nodes}
opt var string latch-angle_nodes ${row1_latch-angle_nodes}
opt var string lever_nodes ${row1_lever_nodes}

read session ${code_source_path}/src/door_latch_metrics.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}
opt var add formatting_window_name "${attack_window}"

opt var add window_number 0
opt var add title_label "Front door Counterweight to Sash"
opt var add y_label "Distance [mm]"
opt var add y_multiplier 0
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 1
opt var add title_label "Front door Counterweight to Door skin"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 2
opt var add title_label "Front door Lock rod to Door skin"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 3
opt var add title_label "Front door lever stroke"
opt var add y_label "Stroke [mm]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 4
opt var add title_label "Front door Lock rod to Outer handle"
opt var add y_label "Distance [mm]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 5
opt var add title_label "Front door Latch opening angle"
opt var add y_label "Relative Angle [degrees]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 6
opt var add title_label "Front door Lock rod to Latch patch"
opt var add y_label "Distance [mm]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- FRONT DOOR MOUNT
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---FRONT DOOR SETIONS---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${frdr_mount}"
window active "${frdr_mount}"
xyplot rlayout "${frdr_mount}" 17

opt var add target_window "${frdr_mount}"
opt var add start_id 0

opt var add target_section_variable frdr_hinges
read session ${code_source_path}/src/section_string_generator.ses
opt var add sections ${section_string}

read session ${code_source_path}/src/bolt_section_output.ses

$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

opt var add start_id 3

opt var add target_section_variable frdr_striker
read session ${code_source_path}/src/section_string_generator.ses
opt var add sections ${section_string}

read session ${code_source_path}/src/striker_section_output.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}
opt var add formatting_window_name "${frdr_mount}"
opt var add y_multiplier 3
opt var add y_step 10000
opt var add y_label "Force [kN]"

opt var add window_number 0
opt var add title_label "Front door bolts normal force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 1
opt var add title_label "Front door bolts resultant shear force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var string x_multiplier 3
opt var add x_space 10000
opt var add x_label "Force [kN]"

opt var add window_number 2
opt var add title_label "Front door bolts normal vs resultant shear"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses


$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

opt var add window_number 3
opt var add title_label "Front door striker normal force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 4
opt var add title_label "Front door striker resultant shear force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- DOOR PANEL -- Y VS X
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---DOOR PANEL INTRUSION LINES---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${door_panel_intrusion}"
window active "${door_panel_intrusion}"
xyplot rlayout "${door_panel_intrusion}" 18
xyplot plotdeactive "${door_panel_intrusion}" all

$-- ROW1 TORSO -- Z vs Y
opt var add window_id 0
opt var add window "${door_panel_intrusion}"
opt var string name ROW1_TORSO_
opt var add target_variable row1_torso_line_nodes
opt var add target_sort z

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/ZoverY.ses

$-- ROW1 SHOULDER -- Y VS X
opt var add window_id 2
opt var string name ROW1_SHOULDER_
opt var add target_variable row1_shoulder_line_nodes
opt var string target_sort x

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$-- ROW1 PELVIS -- Y VS X
opt var add window_id 4
opt var string name ROW1_PELVIS_
opt var add target_variable row1_pelvis_line_nodes

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$-- ROW2 TORSO -- Z vs Y
opt var add window_id 1
opt var string name ROW2_TORSO_
opt var add target_variable row2_torso_line_nodes
opt var string target_sort z

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/ZoverY.ses

$-- ROW1 SHOULDER -- Y VS X
opt var add window_id 3
opt var string name ROW2_SHOULDER_
opt var add target_variable row2_shoulder_line_nodes
opt var string target_sort x

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$-- ROW1 PELVIS -- Y VS X
opt var add window_id 5
opt var string name ROW2_PELVIS_
opt var add target_variable row2_pelvis_line_nodes

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$ -- FORMATTING

opt var add formatting_window_name "${door_panel_intrusion}"
opt var add window_number 0
opt var add title_label "Door skin upper"
opt var add y_label "Z Coordinate [mm]"
opt var add y_step ${ui_z-axis_space}
opt var add y_multiplier 0
opt var add x_label "Y Coordinate [mm]"
opt var add x_space ${ui_y-axis_space}
opt var string x_multiplier 0

opt var add window_number 0
opt var add title_label "Row 1 Torso"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add window_number 1
opt var add title_label "Row 2 Torso"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add y_label "Y Coordinate [mm]"
opt var add y_step ${ui_y-axis_space}
opt var add y_multiplier 0
opt var add x_label "X Coordinate [mm]"
opt var add x_space ${ui_x-axis_space}
opt var string x_multiplier 0

opt var add window_number 2
opt var add title_label "Row 1 Shoulder"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add window_number 4
opt var add title_label "Row 1 Pelvis"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add window_number 3
opt var add title_label "Row 2 Shoulder"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add window_number 5
opt var add title_label "Row 2 Pelvis"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- PANOROOF
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---PANOROOF---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

xyplot create "${panoroof_metrics}"
window active "${panoroof_metrics}"
xyplot rlayout "${panoroof_metrics}" 17
xyplot plotdeactive "${panoroof_metrics}" all
window active none

opt var add target_window "${panoroof_metrics}"
opt var add start_id 0

opt var add target_section_variable panoroof_sections
read session ${code_source_path}/src/section_string_generator.ses
opt var add sections ${section_string}

read session ${code_source_path}/src/bolt_section_output.ses

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("---PANOROOF METRICS")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

window active "${d3plot_data}"
view fo3 ${follow_nodes}
identify reset
identify angle ${panoroof_struck_angle_nodes}
window active "${panoroof_metrics}"
xyplot plotactive "${panoroof_metrics}" 3
xyplot frommodel angles "${panoroof_metrics}" 1 Angle Time all all dlabel "Displacements"
xyplot curve set name "${panoroof_metrics}" "${LAST_CURVE_ID}" "Panoroof struck side lifter angle"
xyplot curve fillvar INITIAL_ANGLE `w[${panoroof_metrics}]c${LAST_CURVE_ID}.y[x=0]`
xyplot curve rfunction newshift down "${panoroof_metrics}" ${LAST_CURVE_ID} ${INITIAL_ANGLE}
xyplot plotdeactive "${panoroof_metrics}" all

window active "${d3plot_data}"
view fo3 ${follow_nodes}
identify reset
identify angle ${panoroof_unstruck_angle_nodes}
window active "${panoroof_metrics}"
xyplot plotactive "${panoroof_metrics}" 4
xyplot frommodel angles "${panoroof_metrics}" 1 Angle Time all all dlabel "Displacements"
xyplot curve set name "${panoroof_metrics}" "${LAST_CURVE_ID}" "Panoroof unstruck side lifter angle"
xyplot curve fillvar INITIAL_ANGLE `w[${panoroof_metrics}]c${LAST_CURVE_ID}.y[x=0]`
xyplot curve rfunction newshift down "${panoroof_metrics}" ${LAST_CURVE_ID} ${INITIAL_ANGLE}
xyplot plotdeactive "${panoroof_metrics}" all

window active "${d3plot_data}"
view fo3 ${follow_nodes}
identify reset
identify distance pp "${panoroof_unstruck_part}" "${panoroof_struck_part}"
window active "${attack_window}"
xyplot plotactive "${attack_window}" 5
xyplot frommodel distances "${attack_window}" 1 Total_distance Time all all dlabel "Displacements"
xyplot curve fillvar INITIAL_ANGLE `w[${panoroof_metrics}]c${LAST_CURVE_ID}.y[x=0]`
xyplot curve rfunction newshift down "${panoroof_metrics}" ${LAST_CURVE_ID} ${INITIAL_ANGLE}
xyplot curve set name "${attack_window}" "${LAST_CURVE_ID}" "Struck Extrusion to Unstruck Extrusion distance"
xyplot plotdeactive "${attack_window}" all

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}
opt var add formatting_window_name "${panoroof_metrics}"
opt var string y_multiplier 3
opt var add y_step 10000
opt var add y_label "Force [kN]"

opt var add window_number 0
opt var add title_label "Panoroof bolts normal force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 1
opt var add title_label "Panoroof seat bolts resultant shear force"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var string x_multiplier 3
opt var add x_space 10000
opt var add x_label "Force [kN]"

opt var add window_number 2
opt var add title_label "Panoroof seat bolts normal vs resultant shear"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

$------------------
$-- Formatting info
opt var add x_label ${ui_x_label}
opt var add x_max ${ui_x_max}
opt var add x_min ${ui_x_min}
opt var add x_space ${ui_x_space}
opt var string x_multiplier ${ui_x_multiplier}

opt var add window_number 3
opt var add title_label "Struck side relative lifter angle"
opt var add y_multiplier 0
opt var add y_label "Angle [degrees]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 4
opt var add title_label "Unstruck side relative lifter angle"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add window_number 5
opt var add title_label "Unstruck to Struck extrusion distance"
opt var add y_label "Distance [mm]"
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- SURVIVAL SPACE -- Z VS Y
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---SURVIVAL SPACE---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${survival_space}"
window active "${survival_space}"
xyplot rlayout "${survival_space}" 1
xyplot plotdeactive "${survival_space}" all
window active none

opt var add scale ${ss_scale}
opt var add offset ${ss_offset}
opt var add window "${survival_space}"
opt var add target_variable bplr_ss_nodes
opt var add target_sort z

read session ${code_source_path}/src/node_string_generator.ses
opt var string bplr_ss_nodes ${dem_nodes}
read session ${code_source_path}/src/Survival_space.ses

$ -- FORMATTING

opt var add formatting_window_name "${survival_space}"
opt var add window_number 0
opt var add title_label "Survival Space"
opt var add y_label "Z Coordinate [mm]"
opt var add y_step 100
opt var add y_multiplier 0
opt var add x_label "Survival Space [mm]"
opt var add x_space 50
opt var string x_multiplier 0
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- SIDE SILL  & ROOF LINE -- Y VS X
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---SIDE SILL AND ROOF INTRUSION LINES---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${sill_roof_intrusion}"
window active "${sill_roof_intrusion}"
xyplot rlayout "${sill_roof_intrusion}" 2
xyplot plotdeactive "${sill_roof_intrusion}" all
window active none

$-- SIDE SILL -- Y VS X
opt var add window_id 1
opt var add window "${sill_roof_intrusion}"
opt var string name SIDE_SILL_
opt var add target_variable side_sill_nodes
opt var add target_sort x

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$-- ROOF LINE -- Y VS X
opt var add window_id 0
opt var string name ROOF_LINE_
opt var add target_variable roof_line_nodes

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$ -- FORMATTING

opt var add formatting_window_name "${window}"
opt var add window_number 0
opt var add title_label "Roof line intrusion"
opt var add y_label "Y Coordinate [mm]"
opt var add y_step ${ui_y-axis_space}
opt var add y_multiplier 0
opt var add x_label "X Coordinate [mm]"
opt var add x_space ${ui_x-axis_space}
opt var string x_multiplier 0
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add window_number 1
opt var add title_label "Side sill intrusion"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$ -- DOOR SKINS -- Y VS X
$

//#!python
# PYTHON script
import meta
from meta import *

def main():

	print("--------------")
	print("---DOOR SKIN INTRUSION LINES---")
	print("")

if __name__ == '__main__':
	main()
//#!EOF

xyplot create "${door_skin_intrusion}"
window active "${door_skin_intrusion}"
xyplot rlayout "${door_skin_intrusion}" 6
xyplot plotdeactive "${door_skin_intrusion}" all
window active none

$-- DOOR SKIN UPPER -- Y VS X
opt var add window_id 0
opt var add window "${door_skin_intrusion}"
opt var string name DOOR_SKIN_UPPER_
opt var add target_variable door_skin_upper_nodes

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$-- DOOR SKIN MID -- Y VS X
opt var add window_id 1
opt var string name DOOR_SKIN_MID_
opt var add target_variable door_skin_mid_nodes

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$-- DOOR SKIN LOWER -- Y VS X
opt var add window_id 2
opt var string name DOOR_SKIN_LOWER_
opt var add target_variable door_skin_lower_nodes

read session ${code_source_path}/src/node_string_generator.ses
opt var string plot_nodes ${dem_nodes}
read session ${code_source_path}/src/YoverX.ses

$ -- FORMATTING

opt var add formatting_window_name "${door_skin_intrusion}"
opt var add window_number 0
opt var add title_label "Door skin upper"
opt var add y_label "Y Coordinate [mm]"
opt var add y_step ${ui_y-axis_space}
opt var add y_multiplier 0
opt var add x_label "X Coordinate [mm]"
opt var add x_space ${ui_x-axis_space}
opt var string x_multiplier 0
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add window_number 1
opt var add title_label "Door skin mid"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

opt var add window_number 2
opt var add title_label "Door skin lower"
read session ${code_source_path}/src/2d_plot_formatting_autoxy.ses

window active "${formatting_window_name}"
xyplot plotactive "${formatting_window_name}" all
xyplot curve visible not "${formatting_window_name}" all
xyplot curve deselect "${formatting_window_name}" all
xyplot plotdeactive "${formatting_window_name}" all
window active none

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- BRING IT ALL BACK
$

xyplot list allwindows off
window active  "$(d3plot_data)"
identify reset
window maximize act
view fo3 ${follow_nodes}
options state variable "time=0"

$------------------------------------------------------------------------------------------------------------------------------------------------------
$-- END
$
