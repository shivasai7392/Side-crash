$-- CURVE PICTURE TAKING SESSION: EXAMPLE VARIABLES
$

$-- FUNCTION START --$
xyplot create ${tmp_window}
window active ${tmp_window}
xyplot rlayout "${tmp_window}" 1
window size ${picture_size}
window active none

window active "${picture_window}"
xyplot plotactive "${picture_window}" all
xyplot curve deselect "${picture_window}" all
xyplot curve select "${picture_window}" ${target_curves}
xyplot curve copy "${picture_window}" selected
window active ${tmp_window}
xyplot curve paste "${tmp_window}" 0 selected
window active ${picture_window}
xyplot plotactive "${picture_window}" all
xyplot curve deselect "${picture_window}" all
xyplot plotdeactive "${picture_window}" all
window active "${tmp_window}"
xyplot plotactive "${tmp_window}" 0
xyplot plotoptions legend off "${tmp_window}" 0
options title off

opt var add formatting_window_name_og ${formatting_window_name}
opt var add window_number_og ${window_number}

$-- FORMATTING

opt var add formatting_window_name "${tmp_window}"
opt var add window_number 0
read session ${code_source_path}/src/2d_plot_formatting_autoy.ses

opt var add formatting_window_name ${formatting_window_name_og}
opt var add window_number ${window_number_og}

$-- MAKE THE DATA VISIBLE
xyplot plotactive "${tmp_window}" 0
xyplot curve visible all "${tmp_window}"
xyplot curve select "${tmp_window}" all
xyplot curve set assign yaxis "${tmp_window}" selected 0
xyplot curve set sync axis "${tmp_window}" selected none
xyplot plotdeactive "${tmp_window}" 0

$-- OUTPUT NON-LABELLED PICTURE

xyplot plotactive "${tmp_window}" 0
xyplot plotoptions title show off "${tmp_window}" 0
xyplot plotdeactive "${tmp_window}" 0

write options outputsize specify ${picture_size}
write options savebg enable
write options transparent enable
write options outputsize dpi ${dpi}
write options scalefonts enable
write options scalefonts 1 100
write options scalefonts 100 100
write options scalefonts disable
write jpeg "${run_directory}/Session_Report/${picture_window}_${file_name}.jpeg" 100

$-- OUTPUT TITLE PICTURE

xyplot plotactive "${tmp_window}" 0
xyplot plotoptions title show on "${tmp_window}" 0
xyplot plotdeactive "${tmp_window}" 0

write options outputsize specify ${picture_size}
write options savebg enable
write options transparent enable
write options outputsize dpi ${dpi}
write options scalefonts enable
write options scalefonts 1 100
write options scalefonts 100 100
write options scalefonts disable
write jpeg "${run_directory}/Session_Report/${picture_window}_${file_name}_TITLED.jpeg" 100

$-- OUTPUT LEGEND PICTURE

xyplot plotactive "${tmp_window}" 0
xyplot plotoptions legend on "${tmp_window}" 0
xyplot plotdeactive "${tmp_window}" 0

write options outputsize specify ${picture_size}
write options savebg enable
write options transparent enable
write options outputsize dpi ${dpi}
write options scalefonts enable
write options scalefonts 1 100
write options scalefonts 100 100
write options scalefonts disable
write jpeg "${run_directory}/Session_Report/${picture_window}_${file_name}_LEGEND.jpeg" 100

window delete "${tmp_window}"

//#!python
# PYTHON script
import meta
import os
from meta import *

def main():

	image_size = str(utils.MetaGetVariable('picture_size'))
	print("OUTPUT IMAGE SIZE (PIXELS) : "+str(image_size))

	run_dir = str(utils.MetaGetVariable('run_directory'))
	picture_window = str(utils.MetaGetVariable('picture_window'))
	file_name = str(utils.MetaGetVariable('file_name'))
	output = []
	output.append(os.path.join(run_dir,"Session_Report",picture_window+"_"+file_name+".jpeg"))
	output.append(os.path.join(run_dir,"Session_Report",picture_window+"_"+file_name+"_TITLED.jpeg"))
	output.append(os.path.join(run_dir,"Session_Report",picture_window+"_"+file_name+"_LEGEND.jpeg"))

	print("OUTPUT CURVE IMAGES : ")
	for o in output:
		if os.path.exists(o):
			print(o)
	print("")

if __name__ == '__main__':
	main()
//#!EOF
